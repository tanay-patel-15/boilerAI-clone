{"ast":null,"code":"var _jsxFileName = \"/Users/tanaypatel/Desktop/sideProjects/boilerAI-clone/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('/api/auth/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n  const value = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","fetchUser","response","get","headers","Authorization","data","error","console","logout","login","email","password","post","newToken","userData","setItem","_error$response","_error$response$data","register","newUser","_error$response2","_error$response2$data","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanaypatel/Desktop/sideProjects/boilerAI-clone/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  major?: string;\n  graduationYear?: number;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (userData: RegisterData) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  major: string;\n  graduationYear: number;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  const fetchUser = async () => {\n    try {\n      const response = await axios.get('/api/auth/profile', {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setUser(response.data.user);\n    } catch (error) {\n      console.error('Failed to fetch user:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/api/auth/login', { email, password });\n      const { token: newToken, user: userData } = response.data;\n      \n      setToken(newToken);\n      setUser(userData);\n      localStorage.setItem('token', newToken);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Login failed');\n    }\n  };\n\n  const register = async (userData: RegisterData) => {\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      const { token: newToken, user: newUser } = response.data;\n      \n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Registration failed');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}